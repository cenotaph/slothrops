.cart.columns
  .large-9.columns
    %h2 Slothrop's sales slip:

    - unless sale.vouchers.empty?
      Gift vouchers in this sale:
      - sale.vouchers.each do |voucher|
        %p
          = raw "Voucher ##{voucher.number} - #{number_to_currency(voucher.amount, :unit => '&euro;', :format => '%n%u')}"
          = button_to 'Remove', admin_sale_voucher_remove_from_cart_path(:sale_id => sale.id, :voucher_id => voucher.id), :method => :get, :class => [:button, :radius]
        
        
    %table.sales_slip
      - sale.items.each do |item|
        %tr
          %td= item.full_title
          %td
            %span.price
              = number_to_currency(item.price, :unit => raw("&euro;"), :format => "%n%u")

          - if item.class == ConsignmentItem
            %td= button_to 'Remove', admin_sale_consignment_item_remove_from_cart_consignment_path(:consignment_item_id => item.id, :sale_id => sale.id), :method => :get, :class => [:button, :red_button, :radius] unless sale.balance_due == 0
            %td
              Consignment Item for
              = item.consigner.name
          - else
            %td{:colspan => 2}= button_to 'Remove', admin_sale_inventory_remove_from_cart_path(:inventory_id => item.id, :sale_id => sale.id), :method => :get, :class => [:button, :red_button, :radius] unless sale.balance_due == 0
  .large-3.columns
    .system_options
      = button_to 'Delete this sale', [:admin, sale],  :data => { :confirm => 'Are you sure?' }, :method => :delete, :class => "red_button button radius"
      = button_to 'Add a gift voucher', new_admin_sale_voucher_path(:sale_id => sale.id), :method => :get, :class => "button radius"
      %span.has-tip{"data-tooltip" => "", :title => (@sale.completed? ? 'Start a new sale!' : "This sale will be left open!")}
        = button_to 'Start new sale', new_admin_sale_path, :class => "button radius", :method => :get
  .large-6.columns
    - if sale.balance_due > 0    
      = form_tag query_admin_sale_path(sale), :method => :get do |f|
        Scan a barcode or enter author/title information to add an additional book:
        = text_field_tag :sales_lookup


    - if !sale.discount.blank?
      %h4= raw "Total before discount: #{number_to_currency(sale.items.map(&:price).sum, :unit => raw("&euro;"), :format => "%n%u")} "
      %h4
        = raw "Discount: " + number_to_currency(sale.discount, :unit => raw("&euro;"), :format => "%n%u") 
        - if sale.discount_reason
          %em= "(\"#{sale.discount_reason}\")"
    %h3= raw "Total: #{number_to_currency(sale.total_due, :unit => raw("&euro;"), :format => "%n%u")}"
    %h3.payments
      = raw "Paid: #{number_to_currency(sale.payments_made.to_f, :unit => raw("&euro;"), :format => "%n%u")}"  
    = button_to 'Edit payments', admin_sale_payments_path(:sale_id => sale.id), :method => :get, :class => [:button, :radius, :tiny]
    .balance
      %h3= raw "Balance due: #{number_to_currency(sale.balance_due, :unit => raw("&euro;"), :format => "%n%u")}" 
    - if sale.balance_due > 0 
      = button_to 'Add payments', new_admin_sale_payment_path(:sale_id => sale.id), :method => :get, :class => [:button, :radius ], :method => :get

    - elsif sale.completed?

      %p Sale is complete.
      - unless sale.consignment_items.empty?
        %br/
        %br/
        %h3 Consignment money due:
        - sale.consignment_items.group_by{|x| x.consigner }.each do |consigner|
          %p
            = number_to_currency consigner.last.map(&:wholesale).sum
            owed to 
            = consigner.first.name
        %h3 Put in Slothrop's till:
        %p= number_to_currency(sale.payments_made - sale.consignment_items.map{|x| x.wholesale }.sum)
    - else
      All payments applied.  Sale can be completed.
      = button_to 'Complete sale', complete_admin_sale_path(sale), :method => :get  , :class => [:button, :radius]
  .small-4.large-offset-2.columns
    .sale_comment
      = form_tag add_comment_admin_sale_path(sale) do |f|
        %p
          %span.has-tip{"data-tooltip" => "", :title => "Please comment on all sales left open!"} 
            Add comment to sale:
        %p= text_field_tag :comment, sale.comment
        = submit_tag 'Add comment', :class => [:button, :radius]
    - if sale.balance_due > 0 
      .discount
        = form_tag apply_discount_admin_sale_path(sale) do |f|
          %p
            Apply discount of:
            = text_field_tag :discount, sale.discount
          %p
            Why?
            = text_field_tag :discount_reason, sale.discount_reason
          = submit_tag 'Update discount', :class => [:button, :radius]

    


  :javascript
    $("#sales_lookup").select();